name: Stage
on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "staging" ]
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX:PATH=${{github.workspace}}/project

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Install
        run: cmake --install ${{github.workspace}}/build

      - name: Store binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: ${{github.workspace}}/project
  valgrind:
    name: Valgrind
    needs: build
    runs-on: ubuntu-latest
    container:
      image: jamalabo1/general_images:valgrind
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries
      - name: Valgrind Test
        working-directory: bin
        run: |
          ls
          python3 engine.py
  tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries
      - name: Run tests
        working-directory: bin
        run: |
          chmod 755 ./mtm_blockchain 
          python3 engine.py
      - name: Archive Results
        uses: actions/upload-artifact@v4
        with:
          name: tests
          path: ./bin/*test*/*.out